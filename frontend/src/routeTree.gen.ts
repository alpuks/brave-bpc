/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthRequestsRouteImport } from './routes/_auth.requests'
import { Route as AuthListRouteImport } from './routes/_auth.list'
import { Route as AuthDashboardRouteImport } from './routes/_auth.dashboard'
import { Route as AuthAdminRouteImport } from './routes/_auth.admin'

const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRequestsRoute = AuthRequestsRouteImport.update({
  id: '/requests',
  path: '/requests',
  getParentRoute: () => AuthRoute,
} as any)
const AuthListRoute = AuthListRouteImport.update({
  id: '/list',
  path: '/list',
  getParentRoute: () => AuthRoute,
} as any)
const AuthDashboardRoute = AuthDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthRoute,
} as any)
const AuthAdminRoute = AuthAdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => AuthRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AuthAdminRoute
  '/dashboard': typeof AuthDashboardRoute
  '/list': typeof AuthListRoute
  '/requests': typeof AuthRequestsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AuthAdminRoute
  '/dashboard': typeof AuthDashboardRoute
  '/list': typeof AuthListRoute
  '/requests': typeof AuthRequestsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_auth/admin': typeof AuthAdminRoute
  '/_auth/dashboard': typeof AuthDashboardRoute
  '/_auth/list': typeof AuthListRoute
  '/_auth/requests': typeof AuthRequestsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/admin' | '/dashboard' | '/list' | '/requests'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/admin' | '/dashboard' | '/list' | '/requests'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_auth/admin'
    | '/_auth/dashboard'
    | '/_auth/list'
    | '/_auth/requests'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/requests': {
      id: '/_auth/requests'
      path: '/requests'
      fullPath: '/requests'
      preLoaderRoute: typeof AuthRequestsRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/list': {
      id: '/_auth/list'
      path: '/list'
      fullPath: '/list'
      preLoaderRoute: typeof AuthListRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/dashboard': {
      id: '/_auth/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthDashboardRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/admin': {
      id: '/_auth/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthAdminRouteImport
      parentRoute: typeof AuthRoute
    }
  }
}

interface AuthRouteChildren {
  AuthAdminRoute: typeof AuthAdminRoute
  AuthDashboardRoute: typeof AuthDashboardRoute
  AuthListRoute: typeof AuthListRoute
  AuthRequestsRoute: typeof AuthRequestsRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAdminRoute: AuthAdminRoute,
  AuthDashboardRoute: AuthDashboardRoute,
  AuthListRoute: AuthListRoute,
  AuthRequestsRoute: AuthRequestsRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
